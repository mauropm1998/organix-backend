import{G as c,y as p,r as h,z as S}from"./index-CWbGlPLC.js";import{u as C}from"./userService-DjmtoxOE.js";const v={async getAllProducts(){return(await c.get("/api/products")).data},async createProduct(t){return(await c.post("/api/products",t)).data},async updateProduct(t,s){return(await c.put(`/api/products/${t}`,s)).data},async deleteProduct(t){await c.delete(`/api/products/${t}`)}},w={async getAllDrafts(t=null){const s=t?{status:t}:{};return(await c.get("/api/drafts",{params:s})).data},async getDraftById(t){return(await c.get(`/api/drafts/${t}`)).data},async createDraft(t){return(await c.post("/api/drafts",t)).data},async updateDraft(t,s){return(await c.put(`/api/drafts/${t}`,s)).data},async deleteDraft(t){await c.delete(`/api/drafts/${t}`)},async transformDraftToContent(t,s){return(await c.post(`/api/content/transform-draft/${t}`,s)).data}},g={async getAllContent(t={}){const s={};return t.status&&(s.status=t.status),t.channelId&&(s.channelId=t.channelId),t.productId&&(s.productId=t.productId),t.userId&&(s.userId=t.userId),(await c.get("/api/content",{params:s})).data},async getContentById(t){return(await c.get(`/api/content/${t}`)).data},async getMyContent(){return(await c.get("/api/content/my")).data},async createContent(t){return(await c.post("/api/content",t)).data},async updateContent(t,s){return(await c.put(`/api/content/${t}`,s)).data},async updateContentStatus(t,s){return(await c.patch(`/api/content/${t}/status`,{status:s})).data},async updateContentChannelMetrics(t,s){return(await c.put(`/api/content/${t}/channels/metrics`,{channelMetrics:s})).data},async deleteContent(t){await c.delete(`/api/content/${t}`)}},Z={async getPerformanceSummary(t={}){return(await c.get("/api/performance/summary",{params:t})).data},async getTopContent(t={}){return(await c.get("/api/performance/top-content",{params:t})).data},async getChannelPerformance(t={}){return(await c.get("/api/performance/channel-performance",{params:t})).data}},_={async getCompanyInfo(){return(await c.get("/api/company")).data},async updateCompany(t){return(await c.put("/api/company",t)).data},async getCompanyStats(){return(await c.get("/api/company/stats")).data}},ee={async getAllChannels(){return(await c.get("/api/channels")).data}},y=h([]),m=h([]),i=h([]),l=h([]),M=h([]),E=h(null),D=h(null),u=S({users:!1,products:!1,drafts:!1,content:!1,channels:!1,companyStats:!1,performance:!1}),d=S({users:null,products:null,drafts:null,content:null,channels:null,companyStats:null,performance:null});function ae(){const t=async()=>{u.users=!0,d.users=null;try{y.value=await C.getAllUsers()}catch(e){d.users=e.response?.data?.message||"Erro ao carregar usuários",console.error("Error fetching users:",e)}finally{u.users=!1}},s=async e=>{try{const r=await C.createUser(e);return y.value.push(r),{success:!0,data:r}}catch(r){return{success:!1,error:r.response?.data?.message||"Erro ao criar usuário"}}},f=async(e,r)=>{try{const a=await C.updateUser(e,r),n=y.value.findIndex(o=>o.id===e);return n!==-1&&(y.value[n]=a),{success:!0,data:a}}catch(a){return{success:!1,error:a.response?.data?.message||"Erro ao atualizar usuário"}}},P=async e=>{try{return await C.deleteUser(e),y.value=y.value.filter(r=>r.id!==e),{success:!0}}catch(r){return{success:!1,error:r.response?.data?.message||"Erro ao excluir usuário"}}},I=async()=>{u.products=!0,d.products=null;try{m.value=await v.getAllProducts()}catch(e){d.products=e.response?.data?.message||"Erro ao carregar produtos",console.error("Error fetching products:",e)}finally{u.products=!1}},x=async e=>{try{const r=await v.createProduct(e);return m.value.push(r),{success:!0,data:r}}catch(r){return{success:!1,error:r.response?.data?.message||"Erro ao criar produto"}}},A=async(e,r)=>{try{const a=await v.updateProduct(e,r),n=m.value.findIndex(o=>o.id===e);return n!==-1&&(m.value[n]=a),{success:!0,data:a}}catch(a){return{success:!1,error:a.response?.data?.message||"Erro ao atualizar produto"}}},U=async e=>{try{return await v.deleteProduct(e),m.value=m.value.filter(r=>r.id!==e),{success:!0}}catch(r){return{success:!1,error:r.response?.data?.message||"Erro ao excluir produto"}}},$=async(e=null)=>{u.drafts=!0,d.drafts=null;try{i.value=await w.getAllDrafts(e)}catch(r){d.drafts=r.response?.data?.message||"Erro ao carregar rascunhos",console.error("Error fetching drafts:",r)}finally{u.drafts=!1}},T=async e=>{try{const r=await w.createDraft(e);return i.value.push(r),{success:!0,data:r}}catch(r){return{success:!1,error:r.response?.data?.message||"Erro ao criar rascunho"}}},z=async(e,r)=>{try{const a=await w.updateDraft(e,r),n=i.value.findIndex(o=>o.id===e);return n!==-1&&(i.value[n]=a),{success:!0,data:a}}catch(a){return{success:!1,error:a.response?.data?.message||"Erro ao atualizar rascunho"}}},N=async e=>{try{return await w.deleteDraft(e),i.value=i.value.filter(r=>r.id!==e),{success:!0}}catch(r){return{success:!1,error:r.response?.data?.message||"Erro ao excluir rascunho"}}},B=async(e,r)=>{try{const a=await w.transformDraftToContent(e,r);return i.value=i.value.filter(n=>n.id!==e),l.value&&Array.isArray(l.value)&&l.value.push(a),{success:!0,data:a}}catch(a){return{success:!1,error:a.response?.data?.message||"Erro ao transformar rascunho em conteúdo"}}},b=async(e={})=>{u.content=!0,d.content=null;try{l.value=await g.getAllContent(e)}catch(r){d.content=r.response?.data?.message||"Erro ao carregar conteúdo",console.error("Error fetching content:",r)}finally{u.content=!1}},k=async()=>{u.content=!0,d.content=null;try{l.value=await g.getMyContent()}catch(e){d.content=e.response?.data?.message||"Erro ao carregar meu conteúdo",console.error("Error fetching my content:",e)}finally{u.content=!1}},O=async e=>{try{return{success:!0,data:await g.getContentById(e)}}catch(r){return{success:!1,error:r.response?.data?.message||"Erro ao buscar conteúdo"}}},G=async e=>{try{const r=await g.createContent(e);return l.value.push(r),{success:!0,data:r}}catch(r){return{success:!1,error:r.response?.data?.message||"Erro ao criar conteúdo"}}},V=async(e,r)=>{try{const a=await g.updateContent(e,r),n=l.value.findIndex(o=>o.id===e);return n!==-1&&(l.value[n]=a),{success:!0,data:a}}catch(a){return{success:!1,error:a.response?.data?.message||"Erro ao atualizar conteúdo"}}},F=async(e,r)=>{try{const a=await g.updateContentStatus(e,r),n=l.value.findIndex(o=>o.id===e);return n!==-1&&(l.value[n]=a),{success:!0,data:a}}catch(a){return{success:!1,error:a.response?.data?.message||"Erro ao atualizar status do conteúdo"}}},L=async(e,r)=>{try{const a=await g.updateContentChannelMetrics(e,r),n=l.value.findIndex(o=>o.id===e);return n!==-1&&(l.value[n]=a),{success:!0,data:a}}catch(a){return{success:!1,error:a.response?.data?.message||"Erro ao atualizar métricas do conteúdo"}}},j=async e=>{try{return await g.deleteContent(e),l.value=l.value.filter(r=>r.id!==e),{success:!0}}catch(r){return{success:!1,error:r.response?.data?.message||"Erro ao excluir conteúdo"}}},q=async(e={})=>{u.performance=!0,d.performance=null;try{const r={};if(e.startDate){const o=new Date(e.startDate);r.startDate=o.toISOString().split("T")[0]}if(e.endDate){const o=new Date(e.endDate);r.endDate=o.toISOString().split("T")[0]}e.channel&&e.channel.trim()!==""&&(r.channel=e.channel.trim()),e.productId&&e.productId.trim()!==""&&(r.productId=e.productId.trim());const n=(await Z.getTopContent(r)).map(o=>({id:o.contentId,name:o.contentName,type:o.contentType,channels:[o.channel],productName:o.productName||"N/A",metrics:{likes:o.totalLikes,comments:o.totalComments,shares:o.totalShares,clicks:o.totalViews,views:o.totalViews},postDate:o.publishDate,performanceScore:o.performanceScore}));D.value=n}catch(r){D.value=[],d.performance=r.response?.data?.message||"Erro ao carregar dados de performance"}finally{u.performance=!1}},H=async()=>{u.companyStats=!0,d.companyStats=null;try{E.value=await _.getCompanyStats()}catch(e){d.companyStats=e.response?.data?.message||"Erro ao carregar estatísticas da empresa",console.error("Error fetching company stats:",e)}finally{u.companyStats=!1}},J=async()=>{u.channels=!0,d.channels=null;try{M.value=await ee.getAllChannels()}catch(e){d.channels=e.response?.data?.message||"Erro ao carregar canais",console.error("Error fetching channels:",e)}finally{u.channels=!1}},K=p(()=>i.value.filter(e=>e.status==="PENDING")),Q=p(()=>l.value.filter(e=>e.status==="POSTED")),R=p(()=>y.value.length),W=p(()=>m.value.length),X=p(()=>i.value.length),Y=p(()=>l.value.length);return{users:y,products:m,drafts:i,content:l,channels:M,companyStats:E,performanceData:D,loading:u,loadingUsers:p(()=>u.users),loadingProducts:p(()=>u.products),loadingDrafts:p(()=>u.drafts),loadingContent:p(()=>u.content),loadingChannels:p(()=>u.channels),loadingCompanyStats:p(()=>u.companyStats),loadingPerformance:p(()=>u.performance),errors:d,fetchUsers:t,createUser:s,updateUser:f,deleteUser:P,fetchProducts:I,createProduct:x,updateProduct:A,deleteProduct:U,fetchDrafts:$,createDraft:T,updateDraft:z,deleteDraft:N,transformDraftToContent:B,fetchContent:b,fetchMyContent:k,getContentById:O,createContent:G,updateContent:V,updateContentStatus:F,updateContentChannelMetrics:L,deleteContent:j,fetchPerformanceData:q,fetchCompanyStats:H,fetchChannels:J,pendingDrafts:K,publishedContent:Q,totalUsers:R,totalProducts:W,totalDrafts:X,totalContent:Y}}export{ae as u};
